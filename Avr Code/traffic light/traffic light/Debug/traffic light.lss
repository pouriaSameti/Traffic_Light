
traffic light.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000424  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000478  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000478  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000004a8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000038  00000000  00000000  000004e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000007d3  00000000  00000000  0000051c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000064e  00000000  00000000  00000cef  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000356  00000000  00000000  0000133d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000054  00000000  00000000  00001694  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003e8  00000000  00000000  000016e8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000c0  00000000  00000000  00001ad0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000028  00000000  00000000  00001b90  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 5b 00 	call	0xb6	; 0xb6 <main>
  64:	0c 94 10 02 	jmp	0x420	; 0x420 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <_Z12conversionA0v>:
#include <stdio.h>


int conversionA0(){
	
	ADMUX = 0x40;
  6c:	80 e4       	ldi	r24, 0x40	; 64
  6e:	87 b9       	out	0x07, r24	; 7
	ADCSRA |= 0x40;
  70:	36 9a       	sbi	0x06, 6	; 6
	
	while(ADCSRA & (1 << ADSC));
  72:	36 99       	sbic	0x06, 6	; 6
  74:	fe cf       	rjmp	.-4      	; 0x72 <_Z12conversionA0v+0x6>
	return ADC;
  76:	84 b1       	in	r24, 0x04	; 4
  78:	95 b1       	in	r25, 0x05	; 5
}
  7a:	08 95       	ret

0000007c <_Z12conversionA1v>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  7c:	00 c0       	rjmp	.+0      	; 0x7e <_Z12conversionA1v+0x2>

int conversionA1(){
	
	_delay_us(2);
	
	ADMUX = 0x41;
  7e:	81 e4       	ldi	r24, 0x41	; 65
  80:	87 b9       	out	0x07, r24	; 7
	ADCSRA |= 0x40;
  82:	36 9a       	sbi	0x06, 6	; 6
	
	while(ADCSRA & (1 << ADSC));
  84:	36 99       	sbic	0x06, 6	; 6
  86:	fe cf       	rjmp	.-4      	; 0x84 <_Z12conversionA1v+0x8>
	return ADC;
  88:	84 b1       	in	r24, 0x04	; 4
  8a:	95 b1       	in	r25, 0x05	; 5
}
  8c:	08 95       	ret

0000008e <_Z7waitFori>:

void waitFor(int secs) {
	for (int i=0; i<secs; ++i)
  8e:	18 16       	cp	r1, r24
  90:	19 06       	cpc	r1, r25
  92:	84 f4       	brge	.+32     	; 0xb4 <_Z7waitFori+0x26>
  94:	20 e0       	ldi	r18, 0x00	; 0
  96:	30 e0       	ldi	r19, 0x00	; 0
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  98:	4f e3       	ldi	r20, 0x3F	; 63
  9a:	5d e0       	ldi	r21, 0x0D	; 13
  9c:	63 e0       	ldi	r22, 0x03	; 3
  9e:	41 50       	subi	r20, 0x01	; 1
  a0:	50 40       	sbci	r21, 0x00	; 0
  a2:	60 40       	sbci	r22, 0x00	; 0
  a4:	e1 f7       	brne	.-8      	; 0x9e <_Z7waitFori+0x10>
  a6:	00 c0       	rjmp	.+0      	; 0xa8 <_Z7waitFori+0x1a>
  a8:	00 00       	nop
  aa:	2f 5f       	subi	r18, 0xFF	; 255
  ac:	3f 4f       	sbci	r19, 0xFF	; 255
  ae:	82 17       	cp	r24, r18
  b0:	93 07       	cpc	r25, r19
  b2:	91 f7       	brne	.-28     	; 0x98 <_Z7waitFori+0xa>
  b4:	08 95       	ret

000000b6 <main>:
}

int main(void)
{
	
		DDRC = 0xff;
  b6:	8f ef       	ldi	r24, 0xFF	; 255
  b8:	84 bb       	out	0x14, r24	; 20
		
		DDRA = 0x00;
  ba:	1a ba       	out	0x1a, r1	; 26
		ADCSRA = 0x87;
  bc:	87 e8       	ldi	r24, 0x87	; 135
  be:	86 b9       	out	0x06, r24	; 6
		ADMUX = 0x40;
  c0:	80 e4       	ldi	r24, 0x40	; 64
  c2:	87 b9       	out	0x07, r24	; 7
			
			delayHorizental = value * 0.05;
			midDelay = value * 0.008;
			delayVertical = (value * 0.05) * (512 / value2);
			
			PORTC = 0x24;
  c4:	0f 2e       	mov	r0, r31
  c6:	f4 e2       	ldi	r31, 0x24	; 36
  c8:	6f 2e       	mov	r6, r31
  ca:	f0 2d       	mov	r31, r0
			waitFor(delayHorizental);
			
			PORTC = 0x22;
  cc:	0f 2e       	mov	r0, r31
  ce:	f2 e2       	ldi	r31, 0x22	; 34
  d0:	7f 2e       	mov	r7, r31
  d2:	f0 2d       	mov	r31, r0
			waitFor(midDelay);
			
			PORTC = 0x81;
  d4:	01 e8       	ldi	r16, 0x81	; 129
			waitFor(delayVertical);
  d6:	41 2c       	mov	r4, r1
  d8:	68 94       	set
  da:	55 24       	eor	r5, r5
  dc:	51 f8       	bld	r5, 1
			
			PORTC = 0x41;
  de:	11 e4       	ldi	r17, 0x41	; 65
		int delayHorizental, midDelay, delayVertical;

		while (1)
		{
			
			int value = conversionA0();
  e0:	0e 94 36 00 	call	0x6c	; 0x6c <_Z12conversionA0v>
  e4:	7c 01       	movw	r14, r24
			int value2 = conversionA1();
  e6:	0e 94 3e 00 	call	0x7c	; 0x7c <_Z12conversionA1v>
  ea:	ec 01       	movw	r28, r24
			
			delayHorizental = value * 0.05;
  ec:	b7 01       	movw	r22, r14
  ee:	ff 0c       	add	r15, r15
  f0:	88 0b       	sbc	r24, r24
  f2:	99 0b       	sbc	r25, r25
  f4:	0e 94 ef 00 	call	0x1de	; 0x1de <__floatsisf>
  f8:	6b 01       	movw	r12, r22
  fa:	7c 01       	movw	r14, r24
  fc:	2d ec       	ldi	r18, 0xCD	; 205
  fe:	3c ec       	ldi	r19, 0xCC	; 204
 100:	4c e4       	ldi	r20, 0x4C	; 76
 102:	5d e3       	ldi	r21, 0x3D	; 61
 104:	0e 94 53 01 	call	0x2a6	; 0x2a6 <__mulsf3>
 108:	4b 01       	movw	r8, r22
 10a:	5c 01       	movw	r10, r24
			midDelay = value * 0.008;
 10c:	2f e6       	ldi	r18, 0x6F	; 111
 10e:	32 e1       	ldi	r19, 0x12	; 18
 110:	43 e0       	ldi	r20, 0x03	; 3
 112:	5c e3       	ldi	r21, 0x3C	; 60
 114:	c7 01       	movw	r24, r14
 116:	b6 01       	movw	r22, r12
 118:	0e 94 53 01 	call	0x2a6	; 0x2a6 <__mulsf3>
 11c:	0e 94 b7 00 	call	0x16e	; 0x16e <__fixsfsi>
 120:	6b 01       	movw	r12, r22
 122:	7c 01       	movw	r14, r24
			delayVertical = (value * 0.05) * (512 / value2);
			
			PORTC = 0x24;
 124:	65 ba       	out	0x15, r6	; 21
			waitFor(delayHorizental);
 126:	c5 01       	movw	r24, r10
 128:	b4 01       	movw	r22, r8
 12a:	0e 94 b7 00 	call	0x16e	; 0x16e <__fixsfsi>
 12e:	cb 01       	movw	r24, r22
 130:	0e 94 47 00 	call	0x8e	; 0x8e <_Z7waitFori>
			
			PORTC = 0x22;
 134:	75 ba       	out	0x15, r7	; 21
			waitFor(midDelay);
 136:	c6 01       	movw	r24, r12
 138:	0e 94 47 00 	call	0x8e	; 0x8e <_Z7waitFori>
			
			PORTC = 0x81;
 13c:	05 bb       	out	0x15, r16	; 21
			waitFor(delayVertical);
 13e:	c2 01       	movw	r24, r4
 140:	be 01       	movw	r22, r28
 142:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <__divmodhi4>
 146:	07 2e       	mov	r0, r23
 148:	00 0c       	add	r0, r0
 14a:	88 0b       	sbc	r24, r24
 14c:	99 0b       	sbc	r25, r25
 14e:	0e 94 ef 00 	call	0x1de	; 0x1de <__floatsisf>
 152:	a5 01       	movw	r20, r10
 154:	94 01       	movw	r18, r8
 156:	0e 94 53 01 	call	0x2a6	; 0x2a6 <__mulsf3>
 15a:	0e 94 b7 00 	call	0x16e	; 0x16e <__fixsfsi>
 15e:	cb 01       	movw	r24, r22
 160:	0e 94 47 00 	call	0x8e	; 0x8e <_Z7waitFori>
			
			PORTC = 0x41;
 164:	15 bb       	out	0x15, r17	; 21
			waitFor(midDelay);
 166:	c6 01       	movw	r24, r12
 168:	0e 94 47 00 	call	0x8e	; 0x8e <_Z7waitFori>
 16c:	b9 cf       	rjmp	.-142    	; 0xe0 <main+0x2a>

0000016e <__fixsfsi>:
 16e:	0e 94 be 00 	call	0x17c	; 0x17c <__fixunssfsi>
 172:	68 94       	set
 174:	b1 11       	cpse	r27, r1
 176:	0c 94 4d 01 	jmp	0x29a	; 0x29a <__fp_szero>
 17a:	08 95       	ret

0000017c <__fixunssfsi>:
 17c:	0e 94 32 01 	call	0x264	; 0x264 <__fp_splitA>
 180:	88 f0       	brcs	.+34     	; 0x1a4 <__fixunssfsi+0x28>
 182:	9f 57       	subi	r25, 0x7F	; 127
 184:	98 f0       	brcs	.+38     	; 0x1ac <__fixunssfsi+0x30>
 186:	b9 2f       	mov	r27, r25
 188:	99 27       	eor	r25, r25
 18a:	b7 51       	subi	r27, 0x17	; 23
 18c:	b0 f0       	brcs	.+44     	; 0x1ba <__fixunssfsi+0x3e>
 18e:	e1 f0       	breq	.+56     	; 0x1c8 <__fixunssfsi+0x4c>
 190:	66 0f       	add	r22, r22
 192:	77 1f       	adc	r23, r23
 194:	88 1f       	adc	r24, r24
 196:	99 1f       	adc	r25, r25
 198:	1a f0       	brmi	.+6      	; 0x1a0 <__fixunssfsi+0x24>
 19a:	ba 95       	dec	r27
 19c:	c9 f7       	brne	.-14     	; 0x190 <__fixunssfsi+0x14>
 19e:	14 c0       	rjmp	.+40     	; 0x1c8 <__fixunssfsi+0x4c>
 1a0:	b1 30       	cpi	r27, 0x01	; 1
 1a2:	91 f0       	breq	.+36     	; 0x1c8 <__fixunssfsi+0x4c>
 1a4:	0e 94 4c 01 	call	0x298	; 0x298 <__fp_zero>
 1a8:	b1 e0       	ldi	r27, 0x01	; 1
 1aa:	08 95       	ret
 1ac:	0c 94 4c 01 	jmp	0x298	; 0x298 <__fp_zero>
 1b0:	67 2f       	mov	r22, r23
 1b2:	78 2f       	mov	r23, r24
 1b4:	88 27       	eor	r24, r24
 1b6:	b8 5f       	subi	r27, 0xF8	; 248
 1b8:	39 f0       	breq	.+14     	; 0x1c8 <__fixunssfsi+0x4c>
 1ba:	b9 3f       	cpi	r27, 0xF9	; 249
 1bc:	cc f3       	brlt	.-14     	; 0x1b0 <__fixunssfsi+0x34>
 1be:	86 95       	lsr	r24
 1c0:	77 95       	ror	r23
 1c2:	67 95       	ror	r22
 1c4:	b3 95       	inc	r27
 1c6:	d9 f7       	brne	.-10     	; 0x1be <__fixunssfsi+0x42>
 1c8:	3e f4       	brtc	.+14     	; 0x1d8 <__fixunssfsi+0x5c>
 1ca:	90 95       	com	r25
 1cc:	80 95       	com	r24
 1ce:	70 95       	com	r23
 1d0:	61 95       	neg	r22
 1d2:	7f 4f       	sbci	r23, 0xFF	; 255
 1d4:	8f 4f       	sbci	r24, 0xFF	; 255
 1d6:	9f 4f       	sbci	r25, 0xFF	; 255
 1d8:	08 95       	ret

000001da <__floatunsisf>:
 1da:	e8 94       	clt
 1dc:	09 c0       	rjmp	.+18     	; 0x1f0 <__floatsisf+0x12>

000001de <__floatsisf>:
 1de:	97 fb       	bst	r25, 7
 1e0:	3e f4       	brtc	.+14     	; 0x1f0 <__floatsisf+0x12>
 1e2:	90 95       	com	r25
 1e4:	80 95       	com	r24
 1e6:	70 95       	com	r23
 1e8:	61 95       	neg	r22
 1ea:	7f 4f       	sbci	r23, 0xFF	; 255
 1ec:	8f 4f       	sbci	r24, 0xFF	; 255
 1ee:	9f 4f       	sbci	r25, 0xFF	; 255
 1f0:	99 23       	and	r25, r25
 1f2:	a9 f0       	breq	.+42     	; 0x21e <__floatsisf+0x40>
 1f4:	f9 2f       	mov	r31, r25
 1f6:	96 e9       	ldi	r25, 0x96	; 150
 1f8:	bb 27       	eor	r27, r27
 1fa:	93 95       	inc	r25
 1fc:	f6 95       	lsr	r31
 1fe:	87 95       	ror	r24
 200:	77 95       	ror	r23
 202:	67 95       	ror	r22
 204:	b7 95       	ror	r27
 206:	f1 11       	cpse	r31, r1
 208:	f8 cf       	rjmp	.-16     	; 0x1fa <__floatsisf+0x1c>
 20a:	fa f4       	brpl	.+62     	; 0x24a <__floatsisf+0x6c>
 20c:	bb 0f       	add	r27, r27
 20e:	11 f4       	brne	.+4      	; 0x214 <__floatsisf+0x36>
 210:	60 ff       	sbrs	r22, 0
 212:	1b c0       	rjmp	.+54     	; 0x24a <__floatsisf+0x6c>
 214:	6f 5f       	subi	r22, 0xFF	; 255
 216:	7f 4f       	sbci	r23, 0xFF	; 255
 218:	8f 4f       	sbci	r24, 0xFF	; 255
 21a:	9f 4f       	sbci	r25, 0xFF	; 255
 21c:	16 c0       	rjmp	.+44     	; 0x24a <__floatsisf+0x6c>
 21e:	88 23       	and	r24, r24
 220:	11 f0       	breq	.+4      	; 0x226 <__floatsisf+0x48>
 222:	96 e9       	ldi	r25, 0x96	; 150
 224:	11 c0       	rjmp	.+34     	; 0x248 <__floatsisf+0x6a>
 226:	77 23       	and	r23, r23
 228:	21 f0       	breq	.+8      	; 0x232 <__floatsisf+0x54>
 22a:	9e e8       	ldi	r25, 0x8E	; 142
 22c:	87 2f       	mov	r24, r23
 22e:	76 2f       	mov	r23, r22
 230:	05 c0       	rjmp	.+10     	; 0x23c <__floatsisf+0x5e>
 232:	66 23       	and	r22, r22
 234:	71 f0       	breq	.+28     	; 0x252 <__floatsisf+0x74>
 236:	96 e8       	ldi	r25, 0x86	; 134
 238:	86 2f       	mov	r24, r22
 23a:	70 e0       	ldi	r23, 0x00	; 0
 23c:	60 e0       	ldi	r22, 0x00	; 0
 23e:	2a f0       	brmi	.+10     	; 0x24a <__floatsisf+0x6c>
 240:	9a 95       	dec	r25
 242:	66 0f       	add	r22, r22
 244:	77 1f       	adc	r23, r23
 246:	88 1f       	adc	r24, r24
 248:	da f7       	brpl	.-10     	; 0x240 <__floatsisf+0x62>
 24a:	88 0f       	add	r24, r24
 24c:	96 95       	lsr	r25
 24e:	87 95       	ror	r24
 250:	97 f9       	bld	r25, 7
 252:	08 95       	ret

00000254 <__fp_split3>:
 254:	57 fd       	sbrc	r21, 7
 256:	90 58       	subi	r25, 0x80	; 128
 258:	44 0f       	add	r20, r20
 25a:	55 1f       	adc	r21, r21
 25c:	59 f0       	breq	.+22     	; 0x274 <__fp_splitA+0x10>
 25e:	5f 3f       	cpi	r21, 0xFF	; 255
 260:	71 f0       	breq	.+28     	; 0x27e <__fp_splitA+0x1a>
 262:	47 95       	ror	r20

00000264 <__fp_splitA>:
 264:	88 0f       	add	r24, r24
 266:	97 fb       	bst	r25, 7
 268:	99 1f       	adc	r25, r25
 26a:	61 f0       	breq	.+24     	; 0x284 <__fp_splitA+0x20>
 26c:	9f 3f       	cpi	r25, 0xFF	; 255
 26e:	79 f0       	breq	.+30     	; 0x28e <__fp_splitA+0x2a>
 270:	87 95       	ror	r24
 272:	08 95       	ret
 274:	12 16       	cp	r1, r18
 276:	13 06       	cpc	r1, r19
 278:	14 06       	cpc	r1, r20
 27a:	55 1f       	adc	r21, r21
 27c:	f2 cf       	rjmp	.-28     	; 0x262 <__fp_split3+0xe>
 27e:	46 95       	lsr	r20
 280:	f1 df       	rcall	.-30     	; 0x264 <__fp_splitA>
 282:	08 c0       	rjmp	.+16     	; 0x294 <__fp_splitA+0x30>
 284:	16 16       	cp	r1, r22
 286:	17 06       	cpc	r1, r23
 288:	18 06       	cpc	r1, r24
 28a:	99 1f       	adc	r25, r25
 28c:	f1 cf       	rjmp	.-30     	; 0x270 <__fp_splitA+0xc>
 28e:	86 95       	lsr	r24
 290:	71 05       	cpc	r23, r1
 292:	61 05       	cpc	r22, r1
 294:	08 94       	sec
 296:	08 95       	ret

00000298 <__fp_zero>:
 298:	e8 94       	clt

0000029a <__fp_szero>:
 29a:	bb 27       	eor	r27, r27
 29c:	66 27       	eor	r22, r22
 29e:	77 27       	eor	r23, r23
 2a0:	cb 01       	movw	r24, r22
 2a2:	97 f9       	bld	r25, 7
 2a4:	08 95       	ret

000002a6 <__mulsf3>:
 2a6:	0e 94 66 01 	call	0x2cc	; 0x2cc <__mulsf3x>
 2aa:	0c 94 d7 01 	jmp	0x3ae	; 0x3ae <__fp_round>
 2ae:	0e 94 c9 01 	call	0x392	; 0x392 <__fp_pscA>
 2b2:	38 f0       	brcs	.+14     	; 0x2c2 <__mulsf3+0x1c>
 2b4:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <__fp_pscB>
 2b8:	20 f0       	brcs	.+8      	; 0x2c2 <__mulsf3+0x1c>
 2ba:	95 23       	and	r25, r21
 2bc:	11 f0       	breq	.+4      	; 0x2c2 <__mulsf3+0x1c>
 2be:	0c 94 c0 01 	jmp	0x380	; 0x380 <__fp_inf>
 2c2:	0c 94 c6 01 	jmp	0x38c	; 0x38c <__fp_nan>
 2c6:	11 24       	eor	r1, r1
 2c8:	0c 94 4d 01 	jmp	0x29a	; 0x29a <__fp_szero>

000002cc <__mulsf3x>:
 2cc:	0e 94 2a 01 	call	0x254	; 0x254 <__fp_split3>
 2d0:	70 f3       	brcs	.-36     	; 0x2ae <__mulsf3+0x8>

000002d2 <__mulsf3_pse>:
 2d2:	95 9f       	mul	r25, r21
 2d4:	c1 f3       	breq	.-16     	; 0x2c6 <__mulsf3+0x20>
 2d6:	95 0f       	add	r25, r21
 2d8:	50 e0       	ldi	r21, 0x00	; 0
 2da:	55 1f       	adc	r21, r21
 2dc:	62 9f       	mul	r22, r18
 2de:	f0 01       	movw	r30, r0
 2e0:	72 9f       	mul	r23, r18
 2e2:	bb 27       	eor	r27, r27
 2e4:	f0 0d       	add	r31, r0
 2e6:	b1 1d       	adc	r27, r1
 2e8:	63 9f       	mul	r22, r19
 2ea:	aa 27       	eor	r26, r26
 2ec:	f0 0d       	add	r31, r0
 2ee:	b1 1d       	adc	r27, r1
 2f0:	aa 1f       	adc	r26, r26
 2f2:	64 9f       	mul	r22, r20
 2f4:	66 27       	eor	r22, r22
 2f6:	b0 0d       	add	r27, r0
 2f8:	a1 1d       	adc	r26, r1
 2fa:	66 1f       	adc	r22, r22
 2fc:	82 9f       	mul	r24, r18
 2fe:	22 27       	eor	r18, r18
 300:	b0 0d       	add	r27, r0
 302:	a1 1d       	adc	r26, r1
 304:	62 1f       	adc	r22, r18
 306:	73 9f       	mul	r23, r19
 308:	b0 0d       	add	r27, r0
 30a:	a1 1d       	adc	r26, r1
 30c:	62 1f       	adc	r22, r18
 30e:	83 9f       	mul	r24, r19
 310:	a0 0d       	add	r26, r0
 312:	61 1d       	adc	r22, r1
 314:	22 1f       	adc	r18, r18
 316:	74 9f       	mul	r23, r20
 318:	33 27       	eor	r19, r19
 31a:	a0 0d       	add	r26, r0
 31c:	61 1d       	adc	r22, r1
 31e:	23 1f       	adc	r18, r19
 320:	84 9f       	mul	r24, r20
 322:	60 0d       	add	r22, r0
 324:	21 1d       	adc	r18, r1
 326:	82 2f       	mov	r24, r18
 328:	76 2f       	mov	r23, r22
 32a:	6a 2f       	mov	r22, r26
 32c:	11 24       	eor	r1, r1
 32e:	9f 57       	subi	r25, 0x7F	; 127
 330:	50 40       	sbci	r21, 0x00	; 0
 332:	9a f0       	brmi	.+38     	; 0x35a <__mulsf3_pse+0x88>
 334:	f1 f0       	breq	.+60     	; 0x372 <__mulsf3_pse+0xa0>
 336:	88 23       	and	r24, r24
 338:	4a f0       	brmi	.+18     	; 0x34c <__mulsf3_pse+0x7a>
 33a:	ee 0f       	add	r30, r30
 33c:	ff 1f       	adc	r31, r31
 33e:	bb 1f       	adc	r27, r27
 340:	66 1f       	adc	r22, r22
 342:	77 1f       	adc	r23, r23
 344:	88 1f       	adc	r24, r24
 346:	91 50       	subi	r25, 0x01	; 1
 348:	50 40       	sbci	r21, 0x00	; 0
 34a:	a9 f7       	brne	.-22     	; 0x336 <__mulsf3_pse+0x64>
 34c:	9e 3f       	cpi	r25, 0xFE	; 254
 34e:	51 05       	cpc	r21, r1
 350:	80 f0       	brcs	.+32     	; 0x372 <__mulsf3_pse+0xa0>
 352:	0c 94 c0 01 	jmp	0x380	; 0x380 <__fp_inf>
 356:	0c 94 4d 01 	jmp	0x29a	; 0x29a <__fp_szero>
 35a:	5f 3f       	cpi	r21, 0xFF	; 255
 35c:	e4 f3       	brlt	.-8      	; 0x356 <__mulsf3_pse+0x84>
 35e:	98 3e       	cpi	r25, 0xE8	; 232
 360:	d4 f3       	brlt	.-12     	; 0x356 <__mulsf3_pse+0x84>
 362:	86 95       	lsr	r24
 364:	77 95       	ror	r23
 366:	67 95       	ror	r22
 368:	b7 95       	ror	r27
 36a:	f7 95       	ror	r31
 36c:	e7 95       	ror	r30
 36e:	9f 5f       	subi	r25, 0xFF	; 255
 370:	c1 f7       	brne	.-16     	; 0x362 <__mulsf3_pse+0x90>
 372:	fe 2b       	or	r31, r30
 374:	88 0f       	add	r24, r24
 376:	91 1d       	adc	r25, r1
 378:	96 95       	lsr	r25
 37a:	87 95       	ror	r24
 37c:	97 f9       	bld	r25, 7
 37e:	08 95       	ret

00000380 <__fp_inf>:
 380:	97 f9       	bld	r25, 7
 382:	9f 67       	ori	r25, 0x7F	; 127
 384:	80 e8       	ldi	r24, 0x80	; 128
 386:	70 e0       	ldi	r23, 0x00	; 0
 388:	60 e0       	ldi	r22, 0x00	; 0
 38a:	08 95       	ret

0000038c <__fp_nan>:
 38c:	9f ef       	ldi	r25, 0xFF	; 255
 38e:	80 ec       	ldi	r24, 0xC0	; 192
 390:	08 95       	ret

00000392 <__fp_pscA>:
 392:	00 24       	eor	r0, r0
 394:	0a 94       	dec	r0
 396:	16 16       	cp	r1, r22
 398:	17 06       	cpc	r1, r23
 39a:	18 06       	cpc	r1, r24
 39c:	09 06       	cpc	r0, r25
 39e:	08 95       	ret

000003a0 <__fp_pscB>:
 3a0:	00 24       	eor	r0, r0
 3a2:	0a 94       	dec	r0
 3a4:	12 16       	cp	r1, r18
 3a6:	13 06       	cpc	r1, r19
 3a8:	14 06       	cpc	r1, r20
 3aa:	05 06       	cpc	r0, r21
 3ac:	08 95       	ret

000003ae <__fp_round>:
 3ae:	09 2e       	mov	r0, r25
 3b0:	03 94       	inc	r0
 3b2:	00 0c       	add	r0, r0
 3b4:	11 f4       	brne	.+4      	; 0x3ba <__fp_round+0xc>
 3b6:	88 23       	and	r24, r24
 3b8:	52 f0       	brmi	.+20     	; 0x3ce <__fp_round+0x20>
 3ba:	bb 0f       	add	r27, r27
 3bc:	40 f4       	brcc	.+16     	; 0x3ce <__fp_round+0x20>
 3be:	bf 2b       	or	r27, r31
 3c0:	11 f4       	brne	.+4      	; 0x3c6 <__fp_round+0x18>
 3c2:	60 ff       	sbrs	r22, 0
 3c4:	04 c0       	rjmp	.+8      	; 0x3ce <__fp_round+0x20>
 3c6:	6f 5f       	subi	r22, 0xFF	; 255
 3c8:	7f 4f       	sbci	r23, 0xFF	; 255
 3ca:	8f 4f       	sbci	r24, 0xFF	; 255
 3cc:	9f 4f       	sbci	r25, 0xFF	; 255
 3ce:	08 95       	ret

000003d0 <__divmodhi4>:
 3d0:	97 fb       	bst	r25, 7
 3d2:	07 2e       	mov	r0, r23
 3d4:	16 f4       	brtc	.+4      	; 0x3da <__divmodhi4+0xa>
 3d6:	00 94       	com	r0
 3d8:	07 d0       	rcall	.+14     	; 0x3e8 <__divmodhi4_neg1>
 3da:	77 fd       	sbrc	r23, 7
 3dc:	09 d0       	rcall	.+18     	; 0x3f0 <__divmodhi4_neg2>
 3de:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <__udivmodhi4>
 3e2:	07 fc       	sbrc	r0, 7
 3e4:	05 d0       	rcall	.+10     	; 0x3f0 <__divmodhi4_neg2>
 3e6:	3e f4       	brtc	.+14     	; 0x3f6 <__divmodhi4_exit>

000003e8 <__divmodhi4_neg1>:
 3e8:	90 95       	com	r25
 3ea:	81 95       	neg	r24
 3ec:	9f 4f       	sbci	r25, 0xFF	; 255
 3ee:	08 95       	ret

000003f0 <__divmodhi4_neg2>:
 3f0:	70 95       	com	r23
 3f2:	61 95       	neg	r22
 3f4:	7f 4f       	sbci	r23, 0xFF	; 255

000003f6 <__divmodhi4_exit>:
 3f6:	08 95       	ret

000003f8 <__udivmodhi4>:
 3f8:	aa 1b       	sub	r26, r26
 3fa:	bb 1b       	sub	r27, r27
 3fc:	51 e1       	ldi	r21, 0x11	; 17
 3fe:	07 c0       	rjmp	.+14     	; 0x40e <__udivmodhi4_ep>

00000400 <__udivmodhi4_loop>:
 400:	aa 1f       	adc	r26, r26
 402:	bb 1f       	adc	r27, r27
 404:	a6 17       	cp	r26, r22
 406:	b7 07       	cpc	r27, r23
 408:	10 f0       	brcs	.+4      	; 0x40e <__udivmodhi4_ep>
 40a:	a6 1b       	sub	r26, r22
 40c:	b7 0b       	sbc	r27, r23

0000040e <__udivmodhi4_ep>:
 40e:	88 1f       	adc	r24, r24
 410:	99 1f       	adc	r25, r25
 412:	5a 95       	dec	r21
 414:	a9 f7       	brne	.-22     	; 0x400 <__udivmodhi4_loop>
 416:	80 95       	com	r24
 418:	90 95       	com	r25
 41a:	bc 01       	movw	r22, r24
 41c:	cd 01       	movw	r24, r26
 41e:	08 95       	ret

00000420 <_exit>:
 420:	f8 94       	cli

00000422 <__stop_program>:
 422:	ff cf       	rjmp	.-2      	; 0x422 <__stop_program>
